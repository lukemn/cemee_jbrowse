'use strict';var crossFetch = require('cross-fetch');

function crossFetchBinaryRange(url, start, end) {
  var requestDate = new Date();
  return crossFetch(url, {
    method: 'GET',
    headers: { range: 'bytes=' + start + '-' + end } }).
  then(function (res) {
    var responseDate = new Date();
    if (res.status !== 206 && res.status !== 200)
    throw new Error('HTTP ' +
    res.status + ' when fetching ' + url + ' bytes ' + start + '-' + end);


    if (res.status === 200) {
      // TODO: check that the response satisfies the byte range,
      // and is not too big (check maximum size),
      // because we actually ended up getting served the whole file
      throw new Error('HTTP ' +
      res.status + ' when fetching ' + url + ' bytes ' + start + '-' + end);

    }

    var bufPromise = res.buffer ?
    res.buffer() :
    res.arrayBuffer().then(function (arrayBuffer) {return Buffer.from(arrayBuffer);});
    // return the response headers, and the data buffer
    return bufPromise.then(function (buffer) {return {
        headers: res.headers.map,
        requestDate: requestDate,
        responseDate: responseDate,
        buffer: buffer };});

  });
}

module.exports = crossFetchBinaryRange;