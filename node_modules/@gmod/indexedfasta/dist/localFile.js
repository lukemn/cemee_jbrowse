'use strict';

var _iterator = require('babel-runtime/core-js/symbol/iterator');

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = require('babel-runtime/core-js/symbol');

var _symbol2 = _interopRequireDefault(_symbol);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _defineProperty = require('babel-runtime/core-js/object/define-property');

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; (0, _defineProperty2.default)(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new _promise2.default(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return _promise2.default.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var promisify = require('util.promisify');

// don't load fs native module if running in webpacked code
var fs = typeof __webpack_require__ !== 'function' ? require('fs') : null; // eslint-disable-line camelcase

var fsOpen = fs && promisify(fs.open);
var fsRead = fs && promisify(fs.read);
var fsFStat = fs && promisify(fs.fstat);
var fsReadFile = fs && promisify(fs.readFile);

var LocalFile = function () {
  function LocalFile(source) {
    _classCallCheck(this, LocalFile);

    this.position = 0;
    this.filename = source;
    this.fd = fsOpen(this.filename, 'r');
  }

  _createClass(LocalFile, [{
    key: 'read',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(buffer) {
        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var length = arguments[2];
        var position = arguments[3];
        var readPosition, ret;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                readPosition = position;

                if (readPosition === null) {
                  readPosition = this.position;
                  this.position += length;
                }
                _context.t0 = fsRead;
                _context.next = 5;
                return this.fd;

              case 5:
                _context.t1 = _context.sent;
                _context.t2 = buffer;
                _context.t3 = offset;
                _context.t4 = length;
                _context.t5 = position;
                _context.next = 12;
                return (0, _context.t0)(_context.t1, _context.t2, _context.t3, _context.t4, _context.t5);

              case 12:
                ret = _context.sent;

                if (!((typeof ret === 'undefined' ? 'undefined' : _typeof(ret)) === 'object')) {
                  _context.next = 15;
                  break;
                }

                return _context.abrupt('return', ret.bytesRead);

              case 15:
                return _context.abrupt('return', ret);

              case 16:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function read(_x) {
        return _ref.apply(this, arguments);
      }

      return read;
    }()
  }, {
    key: 'readFile',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt('return', fsReadFile(this.filename));

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function readFile() {
        return _ref2.apply(this, arguments);
      }

      return readFile;
    }()
  }, {
    key: 'stat',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this._stat) {
                  _context3.next = 8;
                  break;
                }

                _context3.t0 = fsFStat;
                _context3.next = 4;
                return this.fd;

              case 4:
                _context3.t1 = _context3.sent;
                _context3.next = 7;
                return (0, _context3.t0)(_context3.t1);

              case 7:
                this._stat = _context3.sent;

              case 8:
                return _context3.abrupt('return', this._stat);

              case 9:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function stat() {
        return _ref3.apply(this, arguments);
      }

      return stat;
    }()
  }]);

  return LocalFile;
}();

module.exports = LocalFile;