'use strict';

var _setPrototypeOf = require('babel-runtime/core-js/object/set-prototype-of');

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _bgzfFilehandle = require('@gmod/bgzf-filehandle');

var _indexedFasta = require('./indexedFasta');

var _indexedFasta2 = _interopRequireDefault(_indexedFasta);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass; }

var BgzipIndexedFasta = function (_IndexedFasta) {
  _inherits(BgzipIndexedFasta, _IndexedFasta);

  function BgzipIndexedFasta(_ref) {
    var fasta = _ref.fasta,
        path = _ref.path,
        fai = _ref.fai,
        faiPath = _ref.faiPath,
        gzi = _ref.gzi,
        gziPath = _ref.gziPath,
        chunkSizeLimit = _ref.chunkSizeLimit;

    _classCallCheck(this, BgzipIndexedFasta);

    var _this = _possibleConstructorReturn(this, (BgzipIndexedFasta.__proto__ || (0, _getPrototypeOf2.default)(BgzipIndexedFasta)).call(this, { fasta: fasta, path: path, fai: fai, faiPath: faiPath, chunkSizeLimit: chunkSizeLimit }));

    if (fasta && gzi) {
      _this.fasta = new _bgzfFilehandle.BgzfFilehandle({ filehandle: fasta, gziFilehandle: gzi });
    } else if (path && gziPath) {
      _this.fasta = new _bgzfFilehandle.BgzfFilehandle({ path: path, gziPath: gziPath });
    }
    return _this;
  }

  return BgzipIndexedFasta;
}(_indexedFasta2.default);

module.exports = BgzipIndexedFasta;