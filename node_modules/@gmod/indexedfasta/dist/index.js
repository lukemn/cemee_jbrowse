'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BgzipIndexedFasta = exports.IndexedFasta = exports.FetchableSmallFasta = exports.parseSmallFasta = undefined;

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _defineProperty = require('babel-runtime/core-js/object/define-property');

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; (0, _defineProperty2.default)(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _localFile = require('./localFile');

var _localFile2 = _interopRequireDefault(_localFile);

var _bgzipIndexedFasta = require('./bgzipIndexedFasta');

var _bgzipIndexedFasta2 = _interopRequireDefault(_bgzipIndexedFasta);

var _indexedFasta = require('./indexedFasta');

var _indexedFasta2 = _interopRequireDefault(_indexedFasta);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new _promise2.default(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return _promise2.default.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _toArray(arr) { return Array.isArray(arr) ? arr : (0, _from2.default)(arr); }

function parseSmallFasta(text) {
  return text.split('>').filter(function (t) {
    return (/\S/.test(t)
    );
  }).map(function (entryText) {
    var _entryText$split = entryText.split('\n'),
        _entryText$split2 = _toArray(_entryText$split),
        defLine = _entryText$split2[0],
        seqLines = _entryText$split2.slice(1);

    var _defLine$split = defLine.split(' '),
        _defLine$split2 = _toArray(_defLine$split),
        id = _defLine$split2[0],
        description = _defLine$split2.slice(1);

    var sequence = seqLines.join('').replace(/\s/g, '');
    return {
      id: id,
      description: description.join(' '),
      sequence: sequence
    };
  });
}
// memoized

var FetchableSmallFasta = function () {
  function FetchableSmallFasta(_ref) {
    var fasta = _ref.fasta,
        path = _ref.path;

    _classCallCheck(this, FetchableSmallFasta);

    if (fasta) {
      this.fasta = fasta;
    } else if (path) {
      this.fasta = new _localFile2.default(path);
    }
    this.data = this.fasta.readFile().then(function (buffer) {
      var text = buffer.toString('utf8');
      return parseSmallFasta(text);
    });
  }

  _createClass(FetchableSmallFasta, [{
    key: 'fetch',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(id, start, end) {
        var data, entry, length;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.data;

              case 2:
                data = _context.sent;
                entry = data.find(function (iter) {
                  return iter.id === id;
                });
                length = end - start;

                if (entry) {
                  _context.next = 7;
                  break;
                }

                throw new Error('no sequence with id ' + id + ' exists');

              case 7:
                return _context.abrupt('return', entry.sequence.substr(start, length));

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function fetch(_x, _x2, _x3) {
        return _ref2.apply(this, arguments);
      }

      return fetch;
    }()
  }, {
    key: 'getSequenceList',
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        var data;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.data;

              case 2:
                data = _context2.sent;
                return _context2.abrupt('return', data.map(function (entry) {
                  return entry.id;
                }));

              case 4:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getSequenceList() {
        return _ref3.apply(this, arguments);
      }

      return getSequenceList;
    }()
  }]);

  return FetchableSmallFasta;
}();

exports.parseSmallFasta = parseSmallFasta;
exports.FetchableSmallFasta = FetchableSmallFasta;
exports.IndexedFasta = _indexedFasta2.default;
exports.BgzipIndexedFasta = _bgzipIndexedFasta2.default;